import numpy as np

nameOfCity = ["Tay Ninh", "Vung Tau", "Ben Tre", "Phu Quoc", "TP Ho Chi Minh", "Nha Trang", "Dong Thap", "Can Tho", "Soc Trang", "Ca Mau", "Lang Son", "Cao Bang", "Ha Giang", "Lao Cai","Lai Chau", "Dien Bien", "Son La", "Phu Tho", "Ha Noi", "Quang Ninh", "Hai Duong", "Hai Phong", "Thai Binh", "Nam Dinh", "Ninh Binh", "Thanh Hoa", "Nghe An", "Quang Binh", "Hue", "Da Nang"]

# flight distances between 10 cities
flight_distances = np.array([
    [0,150,125,125,80,352,105,154,194,259, 1195,1260,1280,1260,1262,1167,1133,1124,1077,1080,1068,1059,1011,1010,990,942,886,698,590,567],
    [150,0,85,346,73,304,158,177,155,254,1274,1366,1400,1384,1390,1301,1262,1243,1190,1180,1176,1160,1127,1119,1100,1055,1007,806,678,636],
    [125,85,0,260,71,380,78,90,83,176,1315,1394,1420,1400,1405,1309,1277,1264,1216,1218,1204,1191,1158,1147,1126,1077,1023,832,719,686],
    [125,346,260,0,296,607,187,174,230,183,1631,1403,1395,1354,1343,1242,1228,1245,1210,1243,1212,1207,1168,1152,1128,1072,998,852,788,780],
    [80,73,71,296,0,321,110,145,153,243,1222,1317,1343,1326,1331,1243,1206,1190,1140,1134,1124,1118,1082,1071,1052,1004,954,756,637,600],
    [352,304,380,607,321,0,426,463,456,555,1083,1200,1256,1262,1283,1212,1153,1104,1037,993,1013,994,970,966,955,917,903,670,500,439],
    [105,158,78,187,110,426,0,50,104,159,1264,1356,1374,1351,1340,1244,1220,1215,1173,1184,1158,1153,1120,1109,1086,1038,980,796,695,670],
    [154,177,90,174,145,463,50,0,69,109,1317,1402,1424,1399,1396,1300,1270,1267,1122,1230,1213,1206,1167,1154,1136,1085,1022,842,740,723],
    [194,155,83,230,153,456,104,69,0,100,1368,1450,1471,1447,1452,1348,1319,1317,1268,1275,1260,1252,1204,1202,1181,1139,1081,895,788,760],
    [259,254,176,183,243,555,159,109,100,0,1428,1515,1527,1498,1493,1393,1361,1368,1326,1340,1320,1315,1268,1266,1241,1191,1126,950,853,838],
    [1195,1274,1315,1631,1222,1083,1264,1317,1368,1428,0,110,210,300,345,385,300,170,140,95,110,110,160,170,195,250,340,465,630,685],
    [1260,1366,1394,1403,1317,1200,1356,1402,1450,1515,110,0,130,230,280,350,280,220,190,200,190,210,245,245,270,320,400,580,700,760],
    [1280,1400,1420,1395,1343,1256,1374,1424,1471,1527,210,130,0,110,160,255,200,175,240,310,250,280,300,290,310,345,400,600,765,825],
    [1260,1384,1400,1354,1326,1262,1351,1399,1447,1498,300,230,110,0,50,150,125,185,255,380,295,335,330,320,320,350,370,595,770,835],
    [1262,1390,1405,1343,1331,1283,1340,1396,1452,1493,345,280,160,50,0,115,125,215,290,420,335,375,365,350,350,375,380,610,785,855],
    [1167,1301,1309,1242,1243,1212,1244,1300,1348,1393,385,350,255,150,115,0,90,225,295,440,345,380,360,340,330,335,310,545,730,800],
    [1133,1262,1277,1228,1206,1153,1220,1270,1319,1361,300,280,200,125,125,90,0,130,200,350,250,290,270,250,240,255,255,485,665,730],
    [1124,1243,1264,1245,1190,1104,1215,1267,1317,1368,170,220,175,185,215,225,130,0,75,220,120,160,150,135,140,170,225,425,590,655],
    [1077,1190,1216,1210,1140,1037,1173,1122,1268,1326,140,190,240,255,290,295,200,75,0,150,45,90,75,70,80,130,215,375,530,595],
    [1080,1180,1218,1243,1134,993,1184,1230,1275,1340,95,200,310,380,420,440,350,220,150,0,100,60,115,130,160,205,315,390,505,555],
    [1068,1176,1204,1212,1124,1013,1158,1213,1260,1320,110,190,250,295,335,345,250,120,45,100,0,40,50,55,85,135,240,370,515,570],
    [1059,1160,1191,1207,1118,994,1153,1206,1252,1315,110,210,280,335,375,380,290,160,90,60,40,0,55,70,100,150,260,360,500,550],
    [1011,1127,1158,1168,1082,970,1120,1167,1204,1268,160,245,300,330,365,360,270,150,75,115,50,55,0,20,45,90,200,315,460,520],
    [1010,1119,1147,1152,1071,966,1109,1154,1202,1266,170,245,290,320,350,340,250,135,70,130,55,70,20,0,30,80,190,315,465,530],
    [990,1100,1126,1128,1052,955,1086,1136,1181,1241,195,270,310,320,350,330,240,140,80,160,85,100,45,30,0,50,160,295,455,515],
    [942,1055,1077,1072,1004,917,1038,1085,1139,1191,250,320,345,350,375,335,255,170,130,205,135,150,90,80,50,0,110,250,415,485],
    [886,1007,1023,998,954,903,980,1022,1081,1126,340,400,400,370,380,310,255,225,215,315,240,260,200,190,160,110,0,235,420,485],
    [698,806,832,852,756,670,796,842,895,950,465,580,600,595,610,545,485,425,375,390,370,360,315,315,295,250,235,0,185,250],
    [590,678,719,788,637,500,695,740,788,853,630,700,765,770,785,730,665,590,530,505,515,500,460,465,455,415,420,185,0,70],
    [567,636,686,780,600,439,670,723,760,838,685,760,825,835,855,800,730,655,595,555,570,550,520,530,515,485,485,250,70,0]
])
# -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
# road distances between 10 cities
road_distances = np.array([
    [0,185,-1,-1,88,499,169,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [185,0,190,-1,96,385,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,190,0,-1,108,-1,-1,-1,121,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,0,-1,-1,226,241,-1,248,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [88,96,108,-1,0,410,-1,155,212,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [499,385,-1,-1,410,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,524],
    [169,-1,-1,226,-1,-1,0,77,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,241,155,-1,77,0,84,144,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,121,-1,212,-1,-1,84,0,114,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,248,-1,-1,-1,144,114,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,125,-1,-1,-1,-1,-1,-1,156,145,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,125,0,227,-1,-1,-1,-1,-1,279,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,227,0,205,-1,-1,-1,-1,294,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,205,0,99,-1,-1,213,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,99,0,202,-1,-1,381,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,202,0,213,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,213,0,206,305,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,213,-1,-1,206,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,156,279,294,-1,381,-1,305,-1,0,196,75,-1,-1,-1,94,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,145,-1,-1,-1,-1,-1,-1,-1,196,0,145,87,-1,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,75,145,0,70,62,-1,107,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,87,70,0,81,-1,-1,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,81,0,21,52,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,21,0,32,-1,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,94,-1,107,-1,52,32,0,74,-1,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,74,0,185,-1,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,185,0,321,-1,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,321,0,219,-1],
    [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,219,0,92],
    [-1,-1,-1,-1,-1,524,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,92,0]
])
dest_city = input("Choose dest city : ")
index = -1
flight_distances_dict = {}
try:
    index = nameOfCity.index(dest_city)
    numberOfCities = 30
    for i in range(numberOfCities):
        city = nameOfCity[i]
        distance = flight_distances[i][nameOfCity.index(dest_city)]
        flight_distances_dict[city] = distance
except  ValueError:
    print(f"{dest_city} not found in list of cities")


